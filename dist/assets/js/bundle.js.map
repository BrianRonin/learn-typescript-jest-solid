{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAYA,MAAqB,WAAW;IAK9B,YAAY,mBAAwC;QAClD,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,WAAW;QAClD,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU;QAChD,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU;IAClD,CAAC;IAED,UAAU;QACR,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YAC7C,IAAI,CAAC,UAAU,EAAE;QACnB,CAAC,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YAC/C,IAAI,CAAC,IAAI,EAAE;QACX,CAAC,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YACvB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,OAAO;SACpC;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,SAAS;SACtC;IACH,CAAC;IACD,IAAI;QACF,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;QACxB,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,SAAS;IACvC,CAAC;CACF;AAlCD,iCAkCC;AAED,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC;IAClC,WAAW,EAAE,QAAQ,CAAC,aAAa,CAAC,0BAA0B,CAAqB;IACnF,UAAU,EAAE,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAsB;IAChE,UAAU,EAAE,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAsB;CACjE,CAAC;AAEF,WAAW,CAAC,UAAU,EAAE","sources":["webpack://typescript/./src/index.ts"],"sourcesContent":["interface VideoPlayerElements {\n  videoPlayer: HTMLVideoElement;\n  playButton: HTMLButtonElement;\n  stopButton: HTMLButtonElement;\n}\n\ninterface VideoPlayerProtocol {\n  playToggle(): void;\n  stop(): void;\n  startEvent(): void;\n}\n\nexport default class VideoPlayer implements VideoPlayerProtocol {\n  private videoPlayer: HTMLVideoElement;\n  private playButton: HTMLButtonElement;\n  private stopButton: HTMLButtonElement;\n\n  constructor(videoPlayerElements: VideoPlayerElements) {\n    this.videoPlayer = videoPlayerElements.videoPlayer\n    this.playButton = videoPlayerElements.playButton\n    this.stopButton = videoPlayerElements.stopButton\n  }\n\n  startEvent(): void {\n    this.playButton.addEventListener('click', () => {\n      this.playToggle()\n    })\n    this.stopButton.addEventListener('click', () => {\n    this.stop()\n    })\n  }\n\n  playToggle(): void {\n    if (this.videoPlayer.paused) {\n      this.videoPlayer.play()\n      this.playButton.innerText = 'parar'\n    } else {\n      this.videoPlayer.pause()\n      this.playButton.innerText = 'iniciar'\n    }\n  }\n  stop(): void {\n    this.videoPlayer.pause()\n    this.videoPlayer.currentTime = 0\n    this.playButton.innerText = 'iniciar'\n  }\n}\n\nconst videoPlayer = new VideoPlayer({\n  videoPlayer: document.querySelector('.video-container > video') as HTMLVideoElement,\n  playButton: document.querySelector('.play') as HTMLButtonElement,\n  stopButton: document.querySelector('.stop') as HTMLButtonElement,\n})\n\nvideoPlayer.startEvent()\n"],"names":[],"sourceRoot":""}